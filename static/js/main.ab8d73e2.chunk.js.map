{"version":3,"sources":["components/Friends/friends.module.css","components/Profile/socialProfileStyles.module.css","components/Statistics/Statistics.module.css","components/Transactions/Transaction.module.css","components/Profile/socialProfile.js","components/Statistics/StatElement.js","components/Statistics/Statistics.js","components/Friends/FriendsElement.js","components/Friends/Friends.js","components/Transactions/TransactionItem.js","components/Transactions/Transactions.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","followers","views","likes","className","src","alt","styles","stats","label","defaultProps","StatisticsElement","percentage","statList","item","StatisticsList","title","map","stat","id","FriendsElement","status","statusOnline","statusOffline","width","FriendsList","friends","friendList","friend","isOnline","TransactionElement","type","amount","currency","transactionHistory","TransactionsList","transactions","transaction","App","user","Statistics","statisticalData","Friends","Transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab8d73e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusOffline\":\"friends_statusOffline__36nms\",\"statusOnline\":\"friends_statusOnline__1mMso\",\"title\":\"friends_title__OcxeK\",\"item\":\"friends_item__3u6rh\",\"avatar\":\"friends_avatar__3nrRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"socialProfileStyles_tag__aU6dC\",\"location\":\"socialProfileStyles_location__2kDL0\",\"stats\":\"socialProfileStyles_stats__Qlbe0\",\"label\":\"socialProfileStyles_label__22xB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Statistics_label__aRzQW\",\"title\":\"Statistics_title__2tvWJ\",\"item\":\"Statistics_item__2Vtph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Transaction_title__1xZHy\",\"transactionHistory\":\"Transaction_transactionHistory__Dv6Ek\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './socialProfileStyles.module.css';\r\n\r\nconst Profile = ({ avatar, name, tag, location, followers, views, likes }) => (\r\n    <div className=\"profile\">\r\n        <div className=\"description\">\r\n            <img\r\n                src={avatar}\r\n                alt=\"Аватар пользователя\"\r\n                className=\"avatar\"\r\n            />\r\n            <p className=\"name\">{name}</p>\r\n            <p className={styles.tag}>{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n            <li>\r\n                <span className={styles.label}>Followers</span>\r\n                <span className=\"quantity\">{followers}</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.label}>Views</span>\r\n                <span className=\"quantity\">{views}</span>\r\n            </li>\r\n            <li>\r\n                <span className={styles.label}>Likes</span>\r\n                <span className=\"quantity\">{likes}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n    location:'The Earth',\r\n    \r\n};\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\n\r\nconst StatisticsElement = ({ label, percentage }) => (\r\n\r\n\r\n    <ul className={styles.statList}>\r\n\r\n        <li className={styles.item}>\r\n            <span className={styles.label}>{label}</span>\r\n            <span className=\"percentage\">{percentage}%</span>\r\n        </li>\r\n\r\n    </ul>\r\n\r\n);\r\n\r\nexport default StatisticsElement;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Statistics from './StatElement';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst StatisticsList = ({ stats }) => (\r\n    <ul>  <h2 className={styles.title}>Upload stats</h2>\r\n        {stats.map((stat) => (\r\n            <li key={stat.id}>\r\n                < Statistics\r\n                    label={stat.label}\r\n                    percentage={stat.percentage}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>);\r\n\r\n    StatisticsList.defaultProps = {\r\n    \r\n    percentage: 0,\r\n    };\r\n\r\nStatisticsList.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number,\r\n  };\r\n\r\nexport default StatisticsList;","import React from 'react';\r\nimport styles from './friends.module.css';\r\n\r\n\r\nconst FriendsElement = ({ avatar, name, status }) => (\r\n    <li className={styles.item}>\r\n        <span className={status ? styles.statusOnline : styles.statusOffline}></span>\r\n        <img className={styles.avatar} src={avatar} alt={name} width=\"150\" />\r\n        <p className={styles.name}>{name}</p>\r\n\r\n    </li>\r\n);\r\n\r\nexport default FriendsElement;\r\n\r\n// className={styles.status}\r\n// {status ? (style = \"color:blue;font-size:46px;\") : 'есть в наличии'}\r\n// {\r\n//     status ? (\r\n//         <span className={styles.statusOnline}></span>\r\n//     ) : (\r\n//         <span className={styles.statusOffline}></span>\r\n//     )\r\n// }","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Friends from './FriendsElement';\r\nimport styles from './friends.module.css';\r\n\r\nconst FriendsList = ({ friends }) => (\r\n    <ul className={styles.friendList}> <h2 className={styles.title}>Friends</h2>\r\n        {friends.map((friend) => (\r\n            <li key={friend.id}>\r\n                < Friends\r\n                    avatar={friend.avatar}\r\n                    name={friend.name}\r\n                    status={friend.isOnline}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>);\r\n\r\n\r\nFriendsList.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  status: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendsList;","import React from 'react';\r\nimport styles from './Transaction.module.css';\r\n\r\n\r\nconst TransactionElement = ({ type, amount, currency }) => (\r\n\r\n\r\n    <table className={styles.transactionHistory}>\r\n        <thead>\r\n            <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <tr>\r\n                <td>{type}</td>\r\n                <td>{amount}</td>\r\n                <td>{currency}</td>\r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>\r\n\r\n);\r\n\r\nexport default TransactionElement;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TransactionsAll from './TransactionItem';\r\nimport styles from './Transaction.module.css';\r\n\r\nconst TransactionsList = ({ transactions }) => (\r\n    <ul>  <h2 className={styles.title}>Transactions</h2>\r\n        {transactions.map((transaction) => (\r\n            <li key={transaction.id}>\r\n                < TransactionsAll\r\n                    type={transaction.type}\r\n                    amount={transaction.amount}\r\n                    currency={transaction.currency}\r\n                />\r\n            </li>\r\n        ))}\r\n    </ul>);\r\n\r\nTransactionsList.defaultProps = {\r\n    type:'unknown',\r\n  };\r\n\r\nTransactionsList.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionsList;","\nimport './App.css';\nimport 'modern-normalize/modern-normalize.css';\nimport Profile from './components/Profile/socialProfile';\nimport user from './user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './statistical-data.json';\nimport Friends from './components/Friends/Friends';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\nimport Transactions from './components/Transactions/Transactions'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Profile avatar={user.avatar} name={user.name} tag={user.tag} location={user.location} followers={user.stats.followers} views={user.stats.views} likes={user.stats.likes} />\n        {/* <Statistics title=\"Upload stats\" stats={statisticalData} />; */}\n        <Statistics stats={statisticalData} />\n        <Friends friends={friends} />\n        <Transactions transactions={transactions} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}